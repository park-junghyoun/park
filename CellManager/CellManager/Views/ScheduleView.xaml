<UserControl x:Class="CellManager.Views.ScheduleView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:vm="clr-namespace:CellManager.ViewModels"
             mc:Ignorable="d"
             d:DesignHeight="800" d:DesignWidth="1200">
    <UserControl.Resources>
        <DataTemplate x:Key="StepTemplateItem">
            <TextBlock Margin="4" VerticalAlignment="Center">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <!-- Default to name so loop templates hide IDs -->
                        <Setter Property="Text" Value="{Binding Name}"/>
                        <Style.Triggers>
                            <!-- Only profile steps show IDs -->
                            <DataTrigger Binding="{Binding Kind}" Value="{x:Static vm:StepKind.Profile}">
                                <Setter Property="Text">
                                    <Setter.Value>
                                        <MultiBinding StringFormat="ID: {0} - {1}">
                                            <Binding Path="Id"/>
                                            <Binding Path="Name"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </DataTemplate>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Cell info status bar -->
        <StatusBar Grid.Row="0" Margin="10">
            <WrapPanel>
                <TextBlock Text="{Binding DataContext.SelectedCell.DisplayNameAndId, RelativeSource={RelativeSource AncestorType=Window}}" Margin="0,0,16,4"/>
                <TextBlock Text="{Binding DataContext.SelectedCell.LastUpdated, RelativeSource={RelativeSource AncestorType=Window}, StringFormat='Updated: {0:yyyy-MM-dd HH:mm:ss}'}" Margin="0,0,16,4"/>
                <TextBlock Text="{Binding DataContext.SelectedCell.Manufacturer, RelativeSource={RelativeSource AncestorType=Window}, StringFormat='Manufacturer: {0}'}" Margin="0,0,16,4"/>
                <TextBlock Text="{Binding DataContext.SelectedCell.CellType, RelativeSource={RelativeSource AncestorType=Window}, StringFormat='Type: {0}'}" Margin="0,0,16,4"/>
                <TextBlock Text="{Binding DataContext.SelectedCell.SerialNumber, RelativeSource={RelativeSource AncestorType=Window}, StringFormat='SN: {0}'}" Margin="0,0,0,4"/>
            </WrapPanel>
        </StatusBar>

        <!-- Main content -->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="700"/>
                <ColumnDefinition Width="400"/>
            </Grid.ColumnDefinitions>

            <!-- Schedule list -->
            <GroupBox Grid.Column="0" Margin="8">
                <DockPanel>
                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Top" Margin="0,0,0,8">
                        <TextBlock Text="Schedules" FontWeight="Bold" FontSize="16"/>
                        <Button Command="{Binding AddScheduleCommand}" Style="{StaticResource MaterialDesignToolButton}">
                            <materialDesign:PackIcon Kind="Plus" Width="16" Height="16"/>
                        </Button>
                        <Button Command="{Binding DeleteScheduleCommand}" CommandParameter="{Binding SelectedSchedule}" Style="{StaticResource MaterialDesignToolButton}">
                            <materialDesign:PackIcon Kind="Delete" Width="16" Height="16"/>
                        </Button>
                    </StackPanel>
                    <ListView DockPanel.Dock="Bottom"
                              ItemsSource="{Binding Schedules}"
                              SelectedItem="{Binding SelectedSchedule}"
                              HorizontalAlignment="Stretch"
                              Tag="{Binding}">
                        <ListView.ContextMenu>
                            <ContextMenu>
                                <ContextMenu.ItemContainerStyle>
                                    <Style TargetType="MenuItem">
                                        <Setter Property="FontSize" Value="14"/>
                                        <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                    </Style>
                                </ContextMenu.ItemContainerStyle>
                                <MenuItem Header="New Schedule"
                                          Command="{Binding PlacementTarget.Tag.AddScheduleCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                                    <MenuItem.Icon>
                                        <materialDesign:PackIcon Kind="Plus" Width="16" Height="16"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                            </ContextMenu>
                        </ListView.ContextMenu>
                        <ListView.Resources>
                            <Style TargetType="GridViewColumnHeader">
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                                <Setter Property="BorderBrush" Value="#FFDDDDDD"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="Padding" Value="5"/>
                            </Style>
                        </ListView.Resources>
                        <ListView.Template>
                            <ControlTemplate TargetType="ListView">
                                <Border BorderBrush="#E5E7EB" BorderThickness="1" SnapsToDevicePixels="True">
                                    <ScrollViewer Focusable="False"
                                                  HorizontalScrollBarVisibility="Disabled"
                                                  Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                                        <ItemsPresenter />
                                    </ScrollViewer>
                                </Border>
                            </ControlTemplate>
                        </ListView.Template>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="Height" Value="35"/>
                                <Setter Property="MinHeight" Value="35"/>
                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                                <Setter Property="UseLayoutRounding" Value="True"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Tag" Value="{Binding DataContext, RelativeSource={RelativeSource AncestorType=ListView}}"/>
                                <Setter Property="ContextMenu">
                                    <Setter.Value>
                                        <ContextMenu>
                                            <ContextMenu.ItemContainerStyle>
                                                <Style TargetType="MenuItem">
                                                    <Setter Property="FontSize" Value="14"/>
                                                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                                                </Style>
                                            </ContextMenu.ItemContainerStyle>
                                            <MenuItem Header="Delete"
                                                      Command="{Binding PlacementTarget.Tag.DeleteScheduleCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                                      CommandParameter="{Binding}">
                                                <MenuItem.Icon>
                                                    <materialDesign:PackIcon Kind="Delete" Width="16" Height="16"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                        </ContextMenu>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ListViewItem">
                                            <Border x:Name="Root" Background="{TemplateBinding Background}">
                                                <Grid>
                                                    <GridViewRowPresenter Margin="0"
                                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                          Content="{TemplateBinding Content}"
                                                                          Columns="{Binding Path=View.Columns, RelativeSource={RelativeSource AncestorType=ListView}}"/>
                                                    <Border HorizontalAlignment="Stretch"
                                                            VerticalAlignment="Bottom"
                                                            Height="1"
                                                            Background="#E0E0E0"/>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="Root" Property="Background" Value="#F7F9FC"/>
                                                </Trigger>
                                                <Trigger Property="IsSelected" Value="True">
                                                    <Setter TargetName="Root" Property="Background" Value="#EDEFF3"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter TargetName="Root" Property="Opacity" Value="0.6"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="Script #" DisplayMemberBinding="{Binding Ordering}" Width="80"/>
                                <GridViewColumn Header="Name" DisplayMemberBinding="{Binding Name}" Width="150"/>
                                <GridViewColumn Header="Duration" Width="90">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding EstimatedDuration, StringFormat='{}{0:hh\\:mm\\:ss}'}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </DockPanel>
            </GroupBox>

            <!-- Sequence builder -->
            <Grid Grid.Column="1" Margin="8">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!-- Schedule name, save button and total duration -->
                <Grid Grid.Row="0" Margin="0,0,0,8">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                </Grid>

                <!-- Timeline preview -->
                <StackPanel Grid.Row="0" Margin="0,0,0,8">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Test Flow" Margin="0,0,0,4" FontWeight="Bold"/>
                        <TextBlock Text="{Binding TotalDuration, StringFormat='Total: {0:hh\\:mm\\:ss}'}"
                               Margin="16,0,0,0" VerticalAlignment="Center"/>
                    </StackPanel>
                    <ItemsControl x:Name="TimelinePreview" ItemsSource="{Binding Sequence}"
                                  HorizontalAlignment="Stretch" ClipToBounds="True" Style="{x:Null}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal" Height="40"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <materialDesign:Card Margin="1" Padding="2" Width="50" Height="32"
                                                     Background="{DynamicResource PrimaryHueLightBrush}">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <materialDesign:PackIcon Kind="{Binding IconKind}" Width="14" Height="14" Margin="0,0,2,0"/>
                                        <TextBlock FontSize="10" Foreground="Black">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Text" Value="{Binding Id}"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Kind}" Value="{x:Static vm:StepKind.LoopStart}">
                                                            <Setter Property="Text" Value="Start"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Kind}" Value="{x:Static vm:StepKind.LoopEnd}">
                                                            <Setter Property="Text" Value="End"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </StackPanel>
                                </materialDesign:Card>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>

                <!-- Sequence list -->
                <StackPanel Grid.Row="1" Orientation="Vertical">
                    <StackPanel Orientation="Horizontal">
                        <TextBox Width="250" Style="{StaticResource MaterialDesignFilledTextBox}"
         Text="{Binding ScheduleName}" materialDesign:HintAssist.Hint="Schedule Name"/>
                        <Button Grid.Column="1" Content="Save" Command="{Binding SaveScheduleCommand}"
        Margin="8,0,0,0" Style="{StaticResource MaterialDesignRaisedButton}"/>
                    </StackPanel>
                    <ListBox x:Name="SequenceList" ItemsSource="{Binding Sequence}" AllowDrop="True" Width="Auto" Height="600"
         PreviewMouseLeftButtonDown="ScheduleList_PreviewMouseLeftButtonDown"
         PreviewMouseMove="ScheduleList_PreviewMouseMove"
         Drop="ScheduleList_Drop" DragOver="ScheduleList_DragOver" DragLeave="ScheduleList_DragLeave">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <materialDesign:Card Margin="4" Padding="8">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{Binding StepNumber}" FontWeight="Bold" Margin="0,0,8,0"/>
                                        <materialDesign:PackIcon Grid.Column="1" Kind="{Binding IconKind}" Width="24" Height="24" Margin="0,0,8,0"/>
                                        <StackPanel Grid.Column="2">
                                            <TextBlock>
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="Text" Value="{Binding Name}"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Kind}" Value="{x:Static vm:StepKind.Profile}">
                                                                <Setter Property="Text">
                                                                    <Setter.Value>
                                                                        <MultiBinding StringFormat="ID: {0} - {1}">
                                                                            <Binding Path="Id"/>
                                                                            <Binding Path="Name"/>
                                                                        </MultiBinding>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Kind}" Value="{x:Static vm:StepKind.LoopStart}">
                                                                <Setter Property="Text" Value="Loop Start"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Kind}" Value="{x:Static vm:StepKind.LoopEnd}">
                                                                <Setter Property="Text" Value="Loop End"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                            <TextBlock Text="{Binding Parameters}" FontSize="12">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Kind}" Value="{x:Static vm:StepKind.Profile}">
                                                                <Setter Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </StackPanel>
                                        <TextBlock Grid.Column="3" Text="{Binding Duration, StringFormat='{}{0:hh\\:mm\\:ss}'}" Margin="8,0" VerticalAlignment="Center"/>
                                        <Button Grid.Column="4" Style="{StaticResource MaterialDesignToolButton}"
                            Command="{Binding DataContext.RemoveStepCommand, RelativeSource={RelativeSource AncestorType=ListBox}}"
                            CommandParameter="{Binding}">
                                            <materialDesign:PackIcon Kind="Close" Width="16" Height="16"/>
                                        </Button>
                                    </Grid>
                                </materialDesign:Card>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </StackPanel>
                
            </Grid>

            <!-- Step library -->
            <GroupBox Grid.Column="2" Margin="8">
                <StackPanel Orientation="Vertical" >
                    <TextBlock Text="Step Libary" FontWeight="Bold" FontSize="16"/>
                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                        <ItemsControl ItemsSource="{Binding StepLibrary}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Expander Header="{Binding Name}" Margin="0,0,0,4" IsExpanded="True">
                                        <ItemsControl ItemsSource="{Binding Steps}" ItemTemplate="{StaticResource StepTemplateItem}"
                                                  PreviewMouseLeftButtonDown="ProfileList_PreviewMouseLeftButtonDown"
                                                  PreviewMouseMove="ProfileList_PreviewMouseMove"/>
                                    </Expander>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                </StackPanel>
            </GroupBox>
        </Grid>

    </Grid>
</UserControl>
