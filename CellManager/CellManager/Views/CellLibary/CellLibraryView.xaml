<UserControl x:Class="CellManager.Views.CellLibary.CellLibraryView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CellManager.Views"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="1000">

    <UserControl.Resources>

        <!-- Build Action=Resource 인 파일을 Pack URI로 등록 -->
        <BitmapImage x:Key="IconNew"    UriSource="pack://application:,,,/Image/new.png"/>
        <BitmapImage x:Key="IconEdit"   UriSource="pack://application:,,,/Image/edit.png"/>
        <BitmapImage x:Key="IconDelete" UriSource="pack://application:,,,/Image/delete.png"/>

        <!-- 이미지 버튼 스타일 -->
        <Style x:Key="ImageButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <!-- 버튼 이미지 -->
                        <Image x:Name="Img" Source="{TemplateBinding Tag}"
                                   Stretch="Uniform"
                                   RenderOptions.BitmapScalingMode="HighQuality"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!-- Hover 효과: 약간 밝게 -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Img" Property="Opacity" Value="0.8"/>
                        </Trigger>

                        <!-- 클릭 효과: Scale 줄이기 -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Img" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="Img" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <!-- 비활성화 효과: 흐리게 -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Img" Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    </UserControl.Resources>
    
    <Grid Margin="20">
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="15"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="250"/>
        </Grid.ColumnDefinitions>
        <Border Grid.Row="0" Grid.Column="0"  BorderBrush="Gray" BorderThickness="1" CornerRadius="5" Padding="5" Margin="0,5,0,5" Background="White" HorizontalAlignment="Stretch" VerticalAlignment="Bottom">
            <Grid>
                <TextBlock Text="Search &amp; Filter" Margin="8" VerticalAlignment="Center" Foreground="Gray" IsHitTestVisible="True" Opacity="0.6"/>
                <TextBox Padding="5" BorderThickness="0" Background="Transparent" VerticalAlignment="Center" IsHitTestVisible="True"
                         Text="{Binding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>
        </Border>
        <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal"  Margin="0,0,0,0" HorizontalAlignment="Right" >
            <Button Content="Create Cell Library" Style="{StaticResource PrimaryActionButton}"  Padding="5"  Width="200" Height="40" Command="{Binding NewCellCommand}"/>
        </StackPanel>

        <ListView Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" x:Name="lv_cells" ItemsSource="{Binding FilteredCells}" Margin="5" SizeChanged="ListView_SizeChanged">

            <ListView.Resources>
                <!-- GridViewColumnHeader 스타일을 Items 컬렉션과 분리하여 정의 -->
                <Style TargetType="GridViewColumnHeader">
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="BorderBrush" Value="#FFDDDDDD"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Padding" Value="5"/>
                </Style>
            </ListView.Resources>

            <ListView.Template>
                <ControlTemplate TargetType="ListView">
                    <Border BorderBrush="#E5E7EB" BorderThickness="1" SnapsToDevicePixels="True">
                        <ScrollViewer Focusable="False" Template="{DynamicResource GridViewScrollViewer}">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </ListView.Template>

            <!-- Row 높이와 MaterialDesign MinHeight 설정 -->
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="Height" Value="35"/>
                    <!-- 고정 Row 높이 -->
                    <Setter Property="MinHeight" Value="35"/>
                    <!-- MaterialDesign 기본 MinHeight 덮어쓰기 -->

                    <!-- 1px 라인 선명하게 -->
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="UseLayoutRounding" Value="True"/>

                    <!-- 기본 배경(알터네이트 배경을 쓰려면 아래 AlternationCount 참고) -->
                    <Setter Property="Background" Value="Transparent"/>

                    <!-- 부모 ListView의 DataContext를 Tag에 저장 -->
                    <Setter Property="Tag" Value="{Binding DataContext, RelativeSource={RelativeSource AncestorType=ListView}}"/>

                    <!-- 오른쪽 버튼 컨텍스트 메뉴 -->
                    <Setter Property="ContextMenu">
                        <Setter.Value>
                            <ContextMenu>
                                <MenuItem Header="Edit"
                                          Command="{Binding PlacementTarget.Tag.OpenDetailsCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                          CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                                    <MenuItem.Icon>
                                        <materialDesign:PackIcon Kind="Pencil" Width="16" Height="16"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Delete"
                                          Command="{Binding PlacementTarget.Tag.DeleteCellCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                          CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                                    <MenuItem.Icon>
                                        <materialDesign:PackIcon Kind="Delete" Width="16" Height="16"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Command="{Binding PlacementTarget.Tag.SelectCellCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                          CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}">
                                    <MenuItem.Style>
                                    <Style TargetType="MenuItem">
                                        <Setter Property="Header" Value="Select"/>
                                        <Setter Property="Icon">
                                            <Setter.Value>
                                                <materialDesign:PackIcon Kind="Check" Width="16" Height="16"/>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding PlacementTarget.DataContext.IsActive, RelativeSource={RelativeSource AncestorType=ContextMenu}}" Value="True">
                                                <Setter Property="Header" Value="Deselect"/>
                                                <Setter Property="Icon">
                                                    <Setter.Value>
                                                        <materialDesign:PackIcon Kind="Close" Width="16" Height="16"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                    </MenuItem.Style>
                                </MenuItem>
                            </ContextMenu>
                        </Setter.Value>
                    </Setter>

                    <!-- 템플릿: 하단 1px 보더 = 가로 줄 -->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListViewItem">
                                <Border x:Name="Root" Background="{TemplateBinding Background}">
                                    <Grid>
                                        <!-- GridView 컬럼 표시 -->
                                        <GridViewRowPresenter Margin="0"
                                                             HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                             VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                             Content="{TemplateBinding Content}"
                                                             Columns="{Binding Path=View.Columns, RelativeSource={RelativeSource AncestorType=ListView}}"/>

                                        <!-- 하단 줄 -->
                                        <Border HorizontalAlignment="Stretch"
                                                VerticalAlignment="Bottom"
                                                Height="1"
                                                Background="#E0E0E0"/>
                                    </Grid>
                                </Border>

                                <!-- Hover/Selected 배경 -->
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="Root" Property="Background" Value="#F7F9FC"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter TargetName="Root" Property="Background" Value="#EDEFF3"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter TargetName="Root" Property="Opacity" Value="0.6"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>
            
            <ListView.View>
                <GridView>

                    <!-- Select Badge -->
                    <GridViewColumn Header="Select">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <ToggleButton IsChecked="{Binding IsActive}"
                                              Command="{Binding DataContext.SelectCellCommand, RelativeSource={RelativeSource AncestorType=ListView}}"
                                              CommandParameter="{Binding}"
                                              Style="{StaticResource MaterialDesignSwitchSecondaryToggleButton}"
                                              ToolTip="MaterialDesignSwitchSecondaryToggleButton"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <!-- Cell Name -->
                    <GridViewColumn Header="Cell name" 
                                    DisplayMemberBinding="{Binding ModelName}"/>

                    <!-- Serial Number -->
                    <GridViewColumn Header="Serial Number" 
                                    DisplayMemberBinding="{Binding SerialNumber}"/>

                    <!-- Part Number -->
                    <GridViewColumn Header="Part Number" 
                                    DisplayMemberBinding="{Binding PartNumber}"/>

                    <!-- Update Date -->
                    <GridViewColumn Header="Update Date" Width="180"
                                    DisplayMemberBinding="{Binding LastUpdated, StringFormat='{}{0:yyyy-MM-dd HH:mm:ss}'}"/>

                    <!-- Cell Type -->
                    <GridViewColumn Header="Cell Type" 
                                    DisplayMemberBinding="{Binding CellType}"/>

                    <!-- Manufacturer -->
                    <GridViewColumn Header="Cell Manufacturer"
                                    DisplayMemberBinding="{Binding Manufacturer}"/>

                </GridView>
            </ListView.View>
        </ListView>


    </Grid>
</UserControl>