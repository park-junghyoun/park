<UserControl x:Class="CellManager.Views.CellLibary.CellLibraryView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CellManager.Views"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="1000">

    <UserControl.Resources>

        <!-- Build Action=Resource 인 파일을 Pack URI로 등록 -->
        <BitmapImage x:Key="IconNew"    UriSource="pack://application:,,,/Image/new.png"/>
        <BitmapImage x:Key="IconEdit"   UriSource="pack://application:,,,/Image/edit.png"/>
        <BitmapImage x:Key="IconDelete" UriSource="pack://application:,,,/Image/delete.png"/>

        <!-- 이미지 버튼 스타일 -->
        <Style x:Key="ImageButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <!-- 버튼 이미지 -->
                        <Image x:Name="Img" Source="{TemplateBinding Tag}"
                                   Stretch="Uniform"
                                   RenderOptions.BitmapScalingMode="HighQuality"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!-- Hover 효과: 약간 밝게 -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Img" Property="Opacity" Value="0.8"/>
                        </Trigger>

                        <!-- 클릭 효과: Scale 줄이기 -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Img" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                            <Setter TargetName="Img" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <!-- 비활성화 효과: 흐리게 -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Img" Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    </UserControl.Resources>
    
    <Grid Margin="20">
        <Grid.RowDefinitions>
            <RowDefinition Height="85"/>
            <RowDefinition Height="15"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="250"/>
        </Grid.ColumnDefinitions>
        <Border Grid.Row="0" Grid.Column="0"  BorderBrush="Gray" BorderThickness="1" CornerRadius="5" Padding="5" Margin="0,5,0,5" Background="White" HorizontalAlignment="Stretch" VerticalAlignment="Bottom">
            <Grid>
                <TextBlock Text="Search &amp; Filter" Margin="8" VerticalAlignment="Center" Foreground="Gray" IsHitTestVisible="True" Opacity="0.6"/>
                <TextBox Padding="5" BorderThickness="0" Background="Transparent" VerticalAlignment="Center" IsHitTestVisible="True"
                         Text="{Binding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>
        </Border>
        <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal"  Margin="0,0,0,0" HorizontalAlignment="Right">
            <Button Style="{StaticResource ImageButton}" Tag="{StaticResource IconNew}"  Width="80" Height="80" Command="{Binding NewCellCommand}"/>
            <Button Style="{StaticResource ImageButton}" Tag="{StaticResource IconEdit}" Width="80" Height="80" Command="{Binding OpenDetailsCommand}" CommandParameter="{Binding SelectedCell}"/>
            <Button Style="{StaticResource ImageButton}" Tag="{StaticResource IconDelete}" Width="80" Height="80" Command="{Binding DeleteCellCommand}" CommandParameter="{Binding SelectedCell}"/>
        </StackPanel>

        <ListView Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" x:Name="lv_cells" ItemsSource="{Binding FilteredCells}" Margin="5" SizeChanged="ListView_SizeChanged" BorderThickness="1" BorderBrush="Black" >

            <ListView.Resources>
                <!-- GridViewColumnHeader 스타일을 Items 컬렉션과 분리하여 정의 -->
                <Style TargetType="GridViewColumnHeader">
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="BorderBrush" Value="#FFDDDDDD"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Padding" Value="5"/>
                </Style>
            </ListView.Resources>

            <!-- Row 높이와 MaterialDesign MinHeight 설정 -->
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="Height" Value="30"/>
                    <!-- 고정 Row 높이 -->
                    <Setter Property="MinHeight" Value="30"/>
                    <!-- MaterialDesign 기본 MinHeight 덮어쓰기 -->
                </Style>
            </ListView.ItemContainerStyle>
            
            <ListView.View>
                <GridView>
                    <!-- Cell Name -->
                    <GridViewColumn >
                        <GridViewColumnHeader Content="Cell name" HorizontalAlignment="Stretch" Padding="5"/>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding DisplayNameAndId}" FontWeight="Bold" Margin="-5" Padding="5"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <!-- Serial Number -->
                    <GridViewColumn >
                        <GridViewColumnHeader Content="Serial Number" HorizontalAlignment="Stretch" Padding="5"/>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding SerialNumber}" Margin="-5" Padding="5"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    
                    <!-- Update Date -->
                    <GridViewColumn Header="Update Date" Width="180">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding LastUpdated, StringFormat='{}{0:yyyy-MM-dd HH:mm:ss}'}" Margin="-5" Padding="5"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <!-- Cell Type -->
                    <GridViewColumn >
                        <GridViewColumnHeader Content="Cell Type" HorizontalAlignment="Stretch" Padding="5"/>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding CellType}" Margin="-5" Padding="5"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    
                    <!-- Manufacturer -->
                    <GridViewColumn >
                        <GridViewColumnHeader Content="Cell Manufacturer" HorizontalAlignment="Stretch" Padding="5"/>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Manufacturer}" Margin="-5" Padding="5"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <!-- Select Badge -->
                    <GridViewColumn>
                        <GridViewColumnHeader Content="Activation" HorizontalAlignment="Stretch" Padding="5"/>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <ToggleButton IsChecked="{Binding IsActive}"
                                              Command="{Binding DataContext.SelectCellCommand, RelativeSource={RelativeSource AncestorType=ListView}}"
                                              CommandParameter="{Binding}"
                                              Style="{StaticResource MaterialDesignSwitchSecondaryToggleButton}"
                                              ToolTip="MaterialDesignSwitchSecondaryToggleButton"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <!-- Row Actions -->
                    <GridViewColumn Width="60">
                        <GridViewColumnHeader Content="Actions" HorizontalAlignment="Stretch" Padding="5"/>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <materialDesign:PopupBox PlacementMode="BottomAndAlignCentres">
                                    <materialDesign:PopupBox.ToggleCheckedContent>
                                        <materialDesign:PackIcon Width="24" Height="24" Kind="DotsVertical"/>
                                    </materialDesign:PopupBox.ToggleCheckedContent>
                                    <StackPanel>
                                        <Button Content="Edit"
                                                Command="{Binding DataContext.OpenDetailsCommand, RelativeSource={RelativeSource AncestorType=ListView}}"
                                                CommandParameter="{Binding}"/>
                                        <Button Content="Delete"
                                                Command="{Binding DataContext.DeleteCellCommand, RelativeSource={RelativeSource AncestorType=ListView}}"
                                                CommandParameter="{Binding}"/>
                                        <Button Command="{Binding DataContext.SelectCellCommand, RelativeSource={RelativeSource AncestorType=ListView}}"
                                                CommandParameter="{Binding}">
                                            <Button.Style>
                                                <Style TargetType="Button">
                                                    <Setter Property="Content" Value="Select"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsActive}" Value="True">
                                                            <Setter Property="Content" Value="Deselect"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                    </StackPanel>
                                </materialDesign:PopupBox>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                </GridView>
            </ListView.View>
        </ListView>


    </Grid>
</UserControl>